##############################
#
# @file lib_mysqludf_preg_position.test
#
# This is a file that can be run through mysqltest in order to perform some
# basic for the libmysql_udf_preg_position UDF.  This should
# usually be invoked through the 'make test' command in ../Makefile.
# To record new test results, use: make lib_mysqludf_preg_position.result
#
#############################

####################################################
# From mysql function.tst & converted

#******************  ******
# This one has some problems on debian sid -- Investigate
#SELECT PREG_POSITION( '/(x)(?|(abc)|(xyz))(x)/' , 'xabcx' , 2 ) ;
#
SELECT PREG_POSITION( '/(x)(?:(abc)|(xyz))(x)/' , 'xabcx' , 2 ) ;
####################################################



####################################################
#### Here are some others

#position the fox
SELECT PREG_POSITION('/(.*?)(fox)/' , 'the quick brown fox' ,2 );

#### Position of the word after new in state
SELECT PREG_POSITION( '/(new)\\s+([a-zA-Z]*)(.*)/i' , description, 2  ) FROM state WHERE description LIKE 'new%' ;

#### Same thing with a named group
SELECT PREG_POSITION( '/(new)\\s+(?P<word>[^\\s]*)(.*)/i' , description, 'word'  )  FROM state WHERE PREG_RLIKE( '/new/i' , description );


#### Use occurence arg to get 2nd quoted word ########
SELECT PREG_POSITION( '/"([^"]+)"/' , 'the "quick" brown fox "jumped" over the "lazy" dog' , 1,2 );

#### simple case -- capture first word starting with b
SELECT PREG_POSITION( '/b[^\\s]*/' , 'the quick brown fox jumped up & down' );

#### out of bounds
SELECT PREG_POSITION( '/b[^\\s]*/' , 'the quick brown fox jumped up & down',0,4);
SELECT PREG_POSITION( '/b[^\\s]*/' , 'the quick brown fox jumped up & down',4);


######### try some none-constant patterns & replacements
#

--disable_warnings
DROP TABLE IF EXISTS `patterns`;
--enable_warnings

CREATE TABLE `patterns` (
  `pattern` varchar(255) NOT NULL,
  `groupnum` int NOT NULL ,
  `groupname` varchar(255) NOT NULL,
  `occurence` int NOT NULL
) ENGINE=HEAP DEFAULT CHARSET=latin1;
INSERT INTO `patterns` VALUES 
       ('/new/i',0,'',1),
       ('/(new)(\\s)([a-zA-Z0-9]+)(.*)/i',3,'',1),
       ('/(new)(\\s)(?P<thing>[a-zA-Z0-9]+)(.*)/i',0,'thing',1) ;

SELECT DISTINCT PREG_POSITION( pattern,description,groupnum,occurence) AS w FROM state, patterns WHERE PREG_RLIKE( pattern, description ) AND groupname='' HAVING w IS NOT NULL ORDER BY w;

DROP DATABASE IF EXISTS `preg_test`;

