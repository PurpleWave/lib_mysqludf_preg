##############################
#
# @file lib_mysqludf_preg_rlike.test
# This is a file that can be run through mysqltest in order to perform some
# basic for the libmysql_udf_preg_rlike UDF.  This should
# usually be invoked through the 'make test' command.
# To record new test results, use: make lib_mysqludf_preg_rlike.result
#
#
#############################

####################################################
# From mysql function.tst & converted

# This one returns 0 , which is different than regexp.  Need to investigate
#select "Det här är svenska" regexp "h[[:alpha:]]+r";
#
select PREG_RLIKE("/h[[:alpha:]]+r/","Det här är svenska");
select PREG_RLIKE("/^(a|b)*$/","aba" );


#select PREG_RLIKE(NULL,"a");
####################################################



####################################################
# Here are some from the pcre test suite

SELECT PREG_RLIKE( '/the quick brown fox/' , 'the quick brown fox' ) ;
SELECT PREG_RLIKE( '/the quick brown fox/' , 'The quick brown FOX' ) ;
SELECT PREG_RLIKE( '/the quick brown fox/' , 'What do you know about THE QUICK BROWN FOX?' ) ;
SELECT PREG_RLIKE('/The quick brown fox/i' , 'the quick brown fox' );


####################################################
# Empty String (Bug #6)
SELECT PREG_RLIKE('/.*/', '');
SELECT PREG_RLIKE('/a*/', 'b');
SELECT PREG_RLIKE('/a*/', '');



####################################################
#### Here are some others

### Find all states starting with new
SELECT  description FROM state WHERE PREG_RLIKE( '/new/i' , description ) ;

######### try some none-constant patterns & replacements
#
--disable_warnings
DROP TABLE IF EXISTS `patterns`;
--enable_warnings

CREATE TABLE `patterns` (
  `pattern` varchar(255) NOT NULL
) ENGINE=HEAP DEFAULT CHARSET=latin1;
INSERT INTO `patterns` VALUES 
       ('/new/i'),
       ('/(new)(\\s)([a-zA-Z0-9]+)(.*)/i');

SELECT DISTINCT description FROM state, patterns WHERE PREG_RLIKE( pattern, description );

DROP DATABASE IF EXISTS `preg_test`;
